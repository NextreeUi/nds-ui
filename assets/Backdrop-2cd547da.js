import{j as s,s as o,r as a,B as d,L as m}from"./index-4cfbf475.js";import{R as n}from"./index-4a5422bd.js";import{j as t}from"./index-9acf6573.js";import{T as h}from"./Table-d1ea99e4.js";const u=({open:r,onClose:l,children:c,className:e})=>s.jsx(s.Fragment,{children:s.jsxs("div",{className:o["backdrop-wrap"]+" "+(r?o.open:""),children:[s.jsx("div",{className:o.backdrop,onClick:l}),s.jsx("div",{className:o["backdrop-content"]+" "+(e||""),children:c})]})}),f=()=>{const r=a.useRef(),l=a.useRef(),c=a.useRef(),[e,p]=a.useState(!1),x=()=>{p(!e)},[j,i]=a.useState(!1);return s.jsx(s.Fragment,{children:s.jsxs("div",{className:"layout-all",children:[s.jsxs("div",{className:"layout-title",children:[s.jsx("h1",{children:"Backdrop"}),s.jsx("p",{className:"description",children:"Backdrop 일정시간 배경을 어둡게 처리하고 새로운 화면을 띄우는 컴포넌트입니다."})]}),s.jsx("div",{className:"layout-small",children:s.jsxs("div",{className:"layout-title",children:[s.jsx("h2",{ref:r,children:"Import"}),s.jsx("div",{className:"codeMirror",children:s.jsx(n,{theme:"dark",extensions:[t({jsx:!0})],value:`import { Backdrop } from 'nds-ui/component';
// or
import Backdrop from 'nds-ui/component/Backdrop';`})}),s.jsxs("p",{className:"description",children:["임포트 방법은 2가지가 있습니다. ",s.jsx("br",{}),"첫번째 방식은 여러개의 컴포넌트를 임포트하는데 유리합니다. ",s.jsx("br",{}),"임포트 방식은 취향에 맞게 사용하시면 됩니다."]})]})}),s.jsx("div",{className:"layout-small",children:s.jsxs("div",{className:"layout-title",children:[s.jsx("h2",{ref:l,children:"Property"}),s.jsxs("p",{className:"description",children:["Backdrop 컴포넌트 안에는 2가지 속성이 있습니다. ",s.jsx("br",{}),"open, onClose 속성이 있는데,그 사용법을 알아보겠습니다."]})]})}),s.jsxs("div",{className:"layout-small",children:[s.jsxs("div",{className:"layout-title",children:[s.jsx("h3",{children:"Basic Backdrop"}),s.jsxs("p",{className:"description",children:["기본적인 Backdrop 형태입니다. ",s.jsx("br",{}),"버튼을 누르면 Backdrop이 나옵니다."]})]}),s.jsxs("div",{className:"layout-example",children:[s.jsx(d,{variant:"contained",onClick:()=>{i(!0)},children:" Backdrop "}),s.jsx(u,{open:j,onClose:()=>{i(!1)},children:s.jsx(m,{})})]}),s.jsxs("div",{className:"codeMirror",children:[s.jsx("div",{className:"btn-wrap",children:s.jsx(d,{square:!0,radius:"round",variant:"outlined",size:"extraSmall",onClick:x,children:s.jsx("i",{className:"i-code w14 h14"})})}),e?s.jsx(n,{theme:"dark",extensions:[t({jsx:!0})],value:`import * as React from 'react';
import { Backdrop, Loading } from 'nds-ui/component';
import 'nds-ui/css/style.scss';

const Example = () => {
  const [BasicOpen, setBasicOpen] = React.useState(false);
  return (
    <div className='flexColumn gap10'>
      <Button variant='contained' onClick={()=>{setBasicOpen(true)}}> Backdrop </Button>
      <Backdrop open={BasicOpen} onClose={()=>{setBasicOpen(false)}}>
        <Loading />
      </Backdrop>
    </div>
  )
}

export default Example;`}):s.jsx(n,{theme:"dark",extensions:[t({jsx:!0})],value:`<>
<Button variant='contained' onClick={()=>{setBasicOpen(true)}}> Backdrop </Button>
<Backdrop open={BasicOpen} onClose={()=>{setBasicOpen(false)}}>
  <Loading />
</Backdrop>
</>`})]})]}),s.jsx("div",{className:"layout-small",children:s.jsxs("div",{className:"layout-title",children:[s.jsx("h3",{children:"open"}),s.jsxs("p",{className:"description",children:["open 속성을 이용하여, Backdrop 을 나타낼 수 있습니다. ",s.jsx("br",{}),"open 속성의 값이 true 이면 나타나고, false 이면 사라집니다. ",s.jsx("br",{}),"React의 state를 사용하여 open의 값을 변경시킬 수 있습니다."]})]})}),s.jsx("div",{className:"layout-small",children:s.jsxs("div",{className:"layout-title",children:[s.jsx("h3",{children:"onClose"}),s.jsxs("p",{className:"description",children:["onClose 속성을 이용하여, Backdrop 을 사라지게 할 수 있습니다. ",s.jsx("br",{}),"open에 들어가는 값을 false 로 변경시키는 함수를 넣어주세요."]})]})}),s.jsxs("div",{className:"layout-small",children:[s.jsxs("div",{className:"layout-title",children:[s.jsx("h2",{ref:c,children:" API "}),s.jsx("p",{className:"description",children:"속성들을 정리한 테이블입니다."})]}),s.jsx(h,{classWrap:"table-props",colGroup:s.jsxs(s.Fragment,{children:[s.jsx("col",{className:"table-props-col1"}),s.jsx("col",{className:"table-props-col2"})]}),tHead:s.jsx(s.Fragment,{children:s.jsxs("tr",{children:[s.jsx("th",{children:"props"}),s.jsx("th",{children:s.jsx("div",{className:"table-props-value",children:"value"})}),s.jsx("th",{children:"description"})]})}),classTBody:"table-props",tBody:s.jsxs(s.Fragment,{children:[s.jsxs("tr",{children:[s.jsx("td",{children:"open"}),s.jsx("td",{children:"boolean"}),s.jsxs("td",{children:["Backdrop을 나타내는 속성으로 불리언(Boolean) 타입입니다. ",s.jsx("br",{}),"속성값은 true / false 를 자유자재로 변경 가능한 state를 넣어주세요."]})]}),s.jsxs("tr",{children:[s.jsx("td",{children:"onClose"}),s.jsx("td",{children:"func"}),s.jsxs("td",{children:["Backdrop을 사라지게 하는 속성으로 함수 명령어가 들어갑니다. ",s.jsx("br",{}),"속성값은 open에 들어간 state 값이 false가 되도록 명령어를 넣어주세요."]})]})]})})]}),s.jsxs("div",{className:"layout-scroll",children:[s.jsx("p",{children:"Content"}),s.jsx("a",{onClick:()=>{r.current.scrollIntoView()},children:" Import"}),s.jsx("a",{onClick:()=>{l.current.scrollIntoView()},children:" Property"}),s.jsx("a",{onClick:()=>{c.current.scrollIntoView()},children:" API"})]})]})})};export{f as default};
